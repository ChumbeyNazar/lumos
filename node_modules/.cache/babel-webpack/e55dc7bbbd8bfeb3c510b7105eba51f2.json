{"ast":null,"code":"import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { Level } from \"./questions.model\";\nimport { questions } from \"../questions.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/radio\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\n\nfunction KnowledgeGameComponent_div_0_mat_radio_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const level_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", level_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", level_r3, \" \");\n  }\n}\n\nfunction KnowledgeGameComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"label\", 3);\n    i0.ɵɵtext(2, \"Choose the question level:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-radio-group\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function KnowledgeGameComponent_div_0_Template_mat_radio_group_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectedLevel = $event;\n    });\n    i0.ɵɵtemplate(4, KnowledgeGameComponent_div_0_mat_radio_button_4_Template, 2, 2, \"mat-radio-button\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6);\n    i0.ɵɵelementStart(6, \"button\", 7);\n    i0.ɵɵtext(7, \"EXIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function KnowledgeGameComponent_div_0_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.startGame();\n    });\n    i0.ɵɵtext(9, \"START\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedLevel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.levels);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", ctx_r0.exit());\n  }\n}\n\nfunction KnowledgeGameComponent_div_1_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function KnowledgeGameComponent_div_1_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.pass();\n    });\n    i0.ɵɵtext(1, \"PASS\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction KnowledgeGameComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function KnowledgeGameComponent_div_1_Template_div_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.nextQuestion();\n    });\n    i0.ɵɵelement(4, \"div\", 12);\n    i0.ɵɵelement(5, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelementStart(7, \"button\", 7);\n    i0.ɵɵtext(8, \"EXIT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, KnowledgeGameComponent_div_1_button_9_Template, 2, 0, \"button\", 14);\n    i0.ɵɵelementStart(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function KnowledgeGameComponent_div_1_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.nextQuestion();\n    });\n    i0.ɵɵtext(11, \"NEXT\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0449\\u0435\\u043D\\u043E \\u043F\\u0438\\u0442\\u0430\\u043D\\u044C: \", ctx_r1.passedStep, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"@cardFlip\", ctx_r1.state);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.currentQuestion == null ? null : ctx_r1.currentQuestion.description, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.currentQuestion == null ? null : ctx_r1.currentQuestion.description, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", ctx_r1.exit());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r1.currentQuestion == null ? null : ctx_r1.currentQuestion.id) != 0);\n  }\n}\n\nexport let KnowledgeGameComponent = /*#__PURE__*/(() => {\n  class KnowledgeGameComponent {\n    constructor() {\n      this.restQuestions = undefined;\n      this.currentQuestion = undefined;\n      this.END_GAME = {\n        id: 0,\n        description: 'Кінець гри',\n        level: Level.EASY\n      };\n      this.passedStep = 0;\n      this.END_GAME_WITH_PASSED_STEP = {\n        id: 0,\n        description: 'Кінець гри </br></br>Є пропущені питання, тому вам двом потрібно відпрацювати їх! \" +\\n' + 'Необхідно потанцювати під музику, яку вибере інший. Час = кількість пропущених питань * 10 сек',\n        level: Level.EASY\n      };\n      this.state = 'default';\n      this.isFilledRequeredField = false;\n      this.levels = ['EASY', 'NORMAL', 'HARD'];\n    }\n\n    ngOnInit() {\n      console.log('onInit');\n      this.passedStep = 0;\n      this.currentQuestion = {\n        id: 0,\n        description: 'START</br></br> <small>Ця гра про чесність. Якщо ти її починаєш, ти приймаєш її правила бути чесним(-ою) перед людиною з якою ти граєш! ' + 'Ти можеш відмовитись зараз або під час ігри вийди, пропустити питання, але вийшовши ти покажеш що не довіряєш людині напроти, а пропустивши - зневажаєш правила! ' + 'На рахунок останнього - пропуски рахуються, а в кінці гри необхідно буде їх відпрацювати. Відпрацьовувати буде людина, з якою ти граєш за тебе!</small>',\n        level: Level.EASY\n      };\n    }\n\n    nextQuestion() {\n      var _a, _b;\n\n      if (this.state === \"default\") {\n        this.state = \"flipped\";\n      } else {\n        this.state = \"default\";\n      }\n\n      console.log('random:', (_a = this.restQuestions) === null || _a === void 0 ? void 0 : _a.length);\n      let randomNumber = this.getRandomArbitrary(1, (_b = this.restQuestions) === null || _b === void 0 ? void 0 : _b.length);\n\n      if (this.restQuestions != undefined && this.restQuestions.length > 0) {\n        console.log('next:', this.restQuestions);\n        this.currentQuestion = this.restQuestions[randomNumber];\n        this.restQuestions.splice(randomNumber, 1);\n      } else {\n        this.currentQuestion = this.END_GAME;\n\n        if (this.passedStep > 0) {\n          this.currentQuestion = this.END_GAME_WITH_PASSED_STEP;\n        }\n      }\n    }\n\n    getRandomArbitrary(min, max) {\n      if (max != undefined) {\n        return Math.floor(Math.random() * (max - 1 - min) + min);\n      }\n\n      return 0;\n    }\n\n    exit() {\n      return '/';\n    }\n\n    pass() {\n      this.passedStep++;\n      this.nextQuestion();\n    }\n\n    startGame() {\n      var _a;\n\n      if (((_a = this.selectedLevel) === null || _a === void 0 ? void 0 : _a.length) != 0) {\n        switch (this.selectedLevel) {\n          case 'EASY':\n            {\n              console.log('EASY');\n              this.restQuestions = questions.filter(question => question.level == Level.EASY);\n              console.log('EASY:', this.restQuestions);\n              break;\n            }\n\n          case 'NORMAL':\n            {\n              console.log('NORMAL');\n              this.restQuestions = questions.filter(question => question.level != Level.HARD);\n              break;\n            }\n\n          case 'HARD':\n            {\n              console.log('HARD');\n              this.restQuestions = questions;\n              break;\n            }\n        }\n\n        this.isFilledRequeredField = true;\n      }\n    }\n\n  }\n\n  KnowledgeGameComponent.ɵfac = function KnowledgeGameComponent_Factory(t) {\n    return new (t || KnowledgeGameComponent)();\n  };\n\n  KnowledgeGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: KnowledgeGameComponent,\n    selectors: [[\"app-knowledge-game\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"start-select-level\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"start-select-level\"], [\"id\", \"example-radio-group-label\", 1, \"example-radio-group-label\"], [\"aria-labelledby\", \"example-radio-group-label\", 1, \"example-radio-group\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"example-radio-button\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-buttons\"], [1, \"btn\", \"exit\", 3, \"routerLink\"], [1, \"btn\", \"next\", 3, \"click\"], [1, \"example-radio-button\", 3, \"value\"], [1, \"passStep\"], [1, \"card\", 3, \"click\"], [1, \"face\", \"back\", 3, \"innerHTML\"], [1, \"face\", \"front\", 3, \"innerHTML\"], [\"class\", \"btn pass\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"pass\", 3, \"click\"]],\n    template: function KnowledgeGameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, KnowledgeGameComponent_div_0_Template, 10, 3, \"div\", 0);\n        i0.ɵɵtemplate(1, KnowledgeGameComponent_div_1_Template, 12, 6, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isFilledRequeredField);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isFilledRequeredField);\n      }\n    },\n    directives: [i1.NgIf, i2.MatRadioGroup, i3.NgControlStatus, i3.NgModel, i1.NgForOf, i4.RouterLink, i2.MatRadioButton],\n    styles: [\".start-select-level[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:flex-start;padding:50px 20px;margin:50px 0;box-shadow:10px 10px 43px -18px #000000bf;font-weight:bolder;background:#02012a;color:gold;border-radius:2px;border:12px rgba(255,233,0,.81) solid;font-size:18px}.passStep[_ngcontent-%COMP%]{width:100%;height:100%;font-size:25px;color:gold}.example-radio-group-label[_ngcontent-%COMP%]{color:#fff}.example-radio-group[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;margin:15px 0;align-items:flex-start;color:#fff}.example-radio-button[_ngcontent-%COMP%]{margin:5px;caret-color:gold;color:#fff}.card[_ngcontent-%COMP%]{width:360px;height:400px;display:flex;flex-direction:column;justify-content:stretch;padding:50px 20px;margin:50px 0;box-shadow:10px 10px 43px -18px #000000bf;font-weight:bolder;background:#02012a;color:gold;border-radius:2px;border:12px rgba(255,233,0,.81) solid;font-size:24px;text-align:center;transform-style:preserve-3d}.card[_ngcontent-%COMP%]   .face[_ngcontent-%COMP%]{border-radius:inherit;-webkit-backface-visibility:hidden;backface-visibility:hidden}.front[_ngcontent-%COMP%]{transform:rotateY(180deg)}.card-buttons[_ngcontent-%COMP%]{width:400px;height:35px;margin:10px;display:flex;justify-content:space-between}.card-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:120px;font-size:18px;border:2px gold solid;border-radius:2px;transition-duration:.5s}.card-buttons[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover{color:#000;background-color:gold}.card-buttons[_ngcontent-%COMP%]   .next[_ngcontent-%COMP%], .card-buttons[_ngcontent-%COMP%]   .pass[_ngcontent-%COMP%], .card-buttons[_ngcontent-%COMP%]   .exit[_ngcontent-%COMP%]{color:#fff}.card-buttons[_ngcontent-%COMP%]   .next[_ngcontent-%COMP%]{background-color:#000}.card-buttons[_ngcontent-%COMP%]   .pass[_ngcontent-%COMP%]{background-color:#000}.card-buttons[_ngcontent-%COMP%]   .exit[_ngcontent-%COMP%]{background-color:#000}\"],\n    data: {\n      animation: [trigger(\"cardFlip\", [state(\"default\", style({\n        transform: \"none\"\n      })), state(\"flipped\", style({\n        transform: \"rotateY(180deg)\"\n      })), state(\"matched\", style({\n        visibility: \"false\",\n        transform: \"scale(0.05)\",\n        opacity: 0\n      })), transition(\"default => flipped\", [animate(\"700ms\")]), transition(\"flipped => default\", [animate(\"700ms\")]), transition(\"* => matched\", [animate(\"600ms\")])])]\n    }\n  });\n  return KnowledgeGameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}